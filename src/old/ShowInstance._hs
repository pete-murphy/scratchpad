module ShowInstance where

data Lambda
  = Var Int
  | Abs Lambda
  | App Lambda Lambda
  deriving (Eq)

instance Show Lambda where
  show (Var a) = show a
  show (Abs a) = "λ " ++ show a
  show (App a b) = 

{-
  show (Var a) = show a
  show (Abs a) = "λ " ++ show a
  show (App a b) =
    case a of
      App _ _ -> show a ++ " " ++ show' b
      _       -> show' a ++ " " ++ show' b
    where
      show' l =
        case l of
          c@(Var _) -> show c
          c         -> "(" ++ show c ++ ")"
-}